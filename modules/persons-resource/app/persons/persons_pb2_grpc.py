# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import persons_pb2 as persons__pb2


class PersonsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePerson = channel.unary_unary(
                '/persons.PersonsService/CreatePerson',
                request_serializer=persons__pb2.Person.SerializeToString,
                response_deserializer=persons__pb2.Person.FromString,
                )
        self.RetrieveAllPersons = channel.unary_stream(
                '/persons.PersonsService/RetrieveAllPersons',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=persons__pb2.Person.FromString,
                )
        self.RetrievePerson = channel.unary_unary(
                '/persons.PersonsService/RetrievePerson',
                request_serializer=persons__pb2.PersonId.SerializeToString,
                response_deserializer=persons__pb2.Person.FromString,
                )
        self.FindConnections = channel.unary_stream(
                '/persons.PersonsService/FindConnections',
                request_serializer=persons__pb2.ConnectionRequest.SerializeToString,
                response_deserializer=persons__pb2.Connection.FromString,
                )


class PersonsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePerson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveAllPersons(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrievePerson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindConnections(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PersonsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePerson': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePerson,
                    request_deserializer=persons__pb2.Person.FromString,
                    response_serializer=persons__pb2.Person.SerializeToString,
            ),
            'RetrieveAllPersons': grpc.unary_stream_rpc_method_handler(
                    servicer.RetrieveAllPersons,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=persons__pb2.Person.SerializeToString,
            ),
            'RetrievePerson': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrievePerson,
                    request_deserializer=persons__pb2.PersonId.FromString,
                    response_serializer=persons__pb2.Person.SerializeToString,
            ),
            'FindConnections': grpc.unary_stream_rpc_method_handler(
                    servicer.FindConnections,
                    request_deserializer=persons__pb2.ConnectionRequest.FromString,
                    response_serializer=persons__pb2.Connection.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'persons.PersonsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PersonsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/persons.PersonsService/CreatePerson',
            persons__pb2.Person.SerializeToString,
            persons__pb2.Person.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveAllPersons(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/persons.PersonsService/RetrieveAllPersons',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            persons__pb2.Person.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrievePerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/persons.PersonsService/RetrievePerson',
            persons__pb2.PersonId.SerializeToString,
            persons__pb2.Person.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindConnections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/persons.PersonsService/FindConnections',
            persons__pb2.ConnectionRequest.SerializeToString,
            persons__pb2.Connection.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
